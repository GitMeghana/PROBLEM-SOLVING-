class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        int[] indegree = new int[numCourses];
        Queue<Integer> q = new LinkedList<>();
        for (int[] p : prerequisites){
            indegree[p[0]]++;
        }
        for (int i = 0; i < indegree.length; i++){
            if (indegree[i] == 0) q.offer(i);
        }
        
        while (!q.isEmpty()){
            int course = q.poll();
            numCourses--;  
            for (int[] p : prerequisites){
                if (p[1] == course){
                    indegree[p[0]]--;
                    if (indegree[p[0]] == 0){
                        q.offer(p[0]);
                    }
                }
            }
        }
      
        return numCourses == 0;
    }
}
